/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// Generated by unplugin-vue-router. ‼️ DO NOT MODIFY THIS FILE ‼️
// It's recommended to commit this file.
// Make sure to add this file to your tsconfig.json file as an "includes" or "files" entry.

declare module 'vue-router/auto-routes' {
  import type {
    RouteRecordInfo,
    ParamValue,
    ParamValueOneOrMore,
    ParamValueZeroOrMore,
    ParamValueZeroOrOne,
  } from 'vue-router'

  /**
   * Route name map generated by unplugin-vue-router
   */
  export interface RouteNamedMap {
    '/': RouteRecordInfo<'/', '/', Record<never, never>, Record<never, never>>,
    '/[...path]': RouteRecordInfo<'/[...path]', '/:path(.*)', { path: ParamValue<true> }, { path: ParamValue<false> }>,
    '/404': RouteRecordInfo<'/404', '/404', Record<never, never>, Record<never, never>>,
    '/about/': RouteRecordInfo<'/about/', '/about', Record<never, never>, Record<never, never>>,
    '/about/site': RouteRecordInfo<'/about/site', '/about/site', Record<never, never>, Record<never, never>>,
    '/anime-character/': RouteRecordInfo<'/anime-character/', '/anime-character', Record<never, never>, Record<never, never>>,
    '/archives/': RouteRecordInfo<'/archives/', '/archives', Record<never, never>, Record<never, never>>,
    '/categories/': RouteRecordInfo<'/categories/', '/categories', Record<never, never>, Record<never, never>>,
    '/musics/': RouteRecordInfo<'/musics/', '/musics', Record<never, never>, Record<never, never>>,
    '/page/[page]': RouteRecordInfo<'/page/[page]', '/page/:page', { page: ParamValue<true> }, { page: ParamValue<false> }>,
    '/posts/': RouteRecordInfo<'/posts/', '/posts', Record<never, never>, Record<never, never>>,
    '/posts/algorithm': RouteRecordInfo<'/posts/algorithm', '/posts/algorithm', Record<never, never>, Record<never, never>>,
    '/posts/event-loop': RouteRecordInfo<'/posts/event-loop', '/posts/event-loop', Record<never, never>, Record<never, never>>,
    '/posts/pageComponent': RouteRecordInfo<'/posts/pageComponent', '/posts/pageComponent', Record<never, never>, Record<never, never>>,
    '/posts/swiper': RouteRecordInfo<'/posts/swiper', '/posts/swiper', Record<never, never>, Record<never, never>>,
    '/posts/total-interview': RouteRecordInfo<'/posts/total-interview', '/posts/total-interview', Record<never, never>, Record<never, never>>,
    '/posts/tree': RouteRecordInfo<'/posts/tree', '/posts/tree', Record<never, never>, Record<never, never>>,
    '/posts/watermark': RouteRecordInfo<'/posts/watermark', '/posts/watermark', Record<never, never>, Record<never, never>>,
    '/projects/': RouteRecordInfo<'/projects/', '/projects', Record<never, never>, Record<never, never>>,
    '/tags/': RouteRecordInfo<'/tags/', '/tags', Record<never, never>, Record<never, never>>,
    '/todos/interview': RouteRecordInfo<'/todos/interview', '/todos/interview', Record<never, never>, Record<never, never>>,
  }

  /**
   * Route file to route info map by unplugin-vue-router.
   * Used by the volar plugin to automatically type useRoute()
   *
   * Each key is a file path relative to the project root with 2 properties:
   * - routes: union of route names of the possible routes when in this page (passed to useRoute<...>())
   * - views: names of nested views (can be passed to <RouterView name="...">)
   *
   * @internal
   */
  export interface _RouteFileInfoMap {
    'node_modules/.pnpm/valaxy-theme-yun@0.26.2_vue@3.5.18_typescript@5.9.2_/node_modules/valaxy-theme-yun/pages/index.vue': {
      routes: '/'
      views: never
    }
    'node_modules/.pnpm/valaxy@0.26.2_@babel+parser_dba4d91b61cfe38809aac9d109be796b/node_modules/valaxy/client/pages/[...path].vue': {
      routes: '/[...path]'
      views: never
    }
    'pages/404.md': {
      routes: '/404'
      views: never
    }
    'pages/about/index.md': {
      routes: '/about/'
      views: never
    }
    'pages/about/site.md': {
      routes: '/about/site'
      views: never
    }
    'pages/anime-character/index.md': {
      routes: '/anime-character/'
      views: never
    }
    'pages/archives/index.md': {
      routes: '/archives/'
      views: never
    }
    'pages/categories/index.md': {
      routes: '/categories/'
      views: never
    }
    'pages/musics/index.md': {
      routes: '/musics/'
      views: never
    }
    'node_modules/.pnpm/valaxy-theme-yun@0.26.2_vue@3.5.18_typescript@5.9.2_/node_modules/valaxy-theme-yun/pages/page/[page].vue': {
      routes: '/page/[page]'
      views: never
    }
    'node_modules/.pnpm/valaxy-theme-yun@0.26.2_vue@3.5.18_typescript@5.9.2_/node_modules/valaxy-theme-yun/pages/posts/index.vue': {
      routes: '/posts/'
      views: never
    }
    'pages/posts/algorithm.md': {
      routes: '/posts/algorithm'
      views: never
    }
    'pages/posts/event-loop.md': {
      routes: '/posts/event-loop'
      views: never
    }
    'pages/posts/pageComponent.md': {
      routes: '/posts/pageComponent'
      views: never
    }
    'pages/posts/swiper.md': {
      routes: '/posts/swiper'
      views: never
    }
    'pages/posts/total-interview.md': {
      routes: '/posts/total-interview'
      views: never
    }
    'pages/posts/tree.md': {
      routes: '/posts/tree'
      views: never
    }
    'pages/posts/watermark.md': {
      routes: '/posts/watermark'
      views: never
    }
    'pages/projects/index.md': {
      routes: '/projects/'
      views: never
    }
    'pages/tags/index.md': {
      routes: '/tags/'
      views: never
    }
    'pages/todos/interview.md': {
      routes: '/todos/interview'
      views: never
    }
  }

  /**
   * Get a union of possible route names in a certain route component file.
   * Used by the volar plugin to automatically type useRoute()
   *
   * @internal
   */
  export type _RouteNamesForFilePath<FilePath extends string> =
    _RouteFileInfoMap extends Record<FilePath, infer Info>
      ? Info['routes']
      : keyof RouteNamedMap
}
